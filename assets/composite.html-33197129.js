const e=JSON.parse(`{"key":"v-603ac20f","path":"/design-pattern/structural/composite.html","title":"组合模式","lang":"zh-CN","frontmatter":{"description":"核心思想 组合模式允许将对象组合成树状结构，并能像使用独立对象一样使用它们。 典型用例 文件和目录结构 在文件系统中，可以用相同的方式来处理文件和目录。目录可以包含文件和其他目录，而文件是目录的一部分。这种模式允许客户端代码以统一的方式来处理复杂的树状结构。 在这个例子中，目录和文件都继承自共同的抽象组件类，目录可以包含其他目录或文件对象，print方...","head":[["meta",{"property":"og:url","content":"https://guoxicheng.top/design-pattern/structural/composite.html"}],["meta",{"property":"og:site_name","content":"Guo's Page"}],["meta",{"property":"og:title","content":"组合模式"}],["meta",{"property":"og:description","content":"核心思想 组合模式允许将对象组合成树状结构，并能像使用独立对象一样使用它们。 典型用例 文件和目录结构 在文件系统中，可以用相同的方式来处理文件和目录。目录可以包含文件和其他目录，而文件是目录的一部分。这种模式允许客户端代码以统一的方式来处理复杂的树状结构。 在这个例子中，目录和文件都继承自共同的抽象组件类，目录可以包含其他目录或文件对象，print方..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-11-27T14:25:23.000Z"}],["meta",{"property":"article:modified_time","content":"2023-11-27T14:25:23.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"组合模式\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-11-27T14:25:23.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"核心思想","slug":"核心思想","link":"#核心思想","children":[]},{"level":2,"title":"典型用例","slug":"典型用例","link":"#典型用例","children":[{"level":3,"title":"文件和目录结构","slug":"文件和目录结构","link":"#文件和目录结构","children":[]},{"level":3,"title":"图形绘制","slug":"图形绘制","link":"#图形绘制","children":[]},{"level":3,"title":"用户界面组件","slug":"用户界面组件","link":"#用户界面组件","children":[]},{"level":3,"title":"组织架构","slug":"组织架构","link":"#组织架构","children":[]},{"level":3,"title":"语法树","slug":"语法树","link":"#语法树","children":[]}]}],"git":{"createdTime":1698826369000,"updatedTime":1701095123000},"readingTime":{"minutes":1.89,"words":568},"filePathRelative":"design-pattern/structural/composite.md","localizedDate":"2023年11月1日","autoDesc":true}`);export{e as data};
