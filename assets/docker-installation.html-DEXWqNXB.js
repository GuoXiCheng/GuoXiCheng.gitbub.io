import{_ as e}from"./plugin-vue_export-helper-DlAUqK2U.js";import{o as a,c as n,a as s}from"./app-WBU25ZwF.js";const t={},r=s(`<h1 id="docker-安装" tabindex="-1"><a class="header-anchor" href="#docker-安装"><span>docker 安装</span></a></h1><h2 id="docker-介绍" tabindex="-1"><a class="header-anchor" href="#docker-介绍"><span>docker 介绍</span></a></h2><p>docker 是一个开源的应用容器引擎，基于 go 语言并遵从 Apache2.0 协议开源。</p><p>docker 可以让开发者打包他们的应用以及依赖包到一个轻量级、可移植的容器中，然后发布到任何流行的 Linux 机器上，也可以实现虚拟化。</p><p>容器是完全使用沙箱机制，相互之间不会有任何接口。几乎没有性能开销，可以很容易地在机器和数据中心中运行。最重要的是，他们不依赖于任何语言、框架或包装系统。</p><h2 id="docker-安装-1" tabindex="-1"><a class="header-anchor" href="#docker-安装-1"><span>docker 安装</span></a></h2><h3 id="下载安装脚本" tabindex="-1"><a class="header-anchor" href="#下载安装脚本"><span>下载安装脚本</span></a></h3><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">curl</span> <span class="token parameter variable">-fsSL</span> https://get.docker.com <span class="token parameter variable">-o</span> get-docker.sh
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="执行安装脚本" tabindex="-1"><a class="header-anchor" href="#执行安装脚本"><span>执行安装脚本</span></a></h3><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">sh</span> get-docker.sh <span class="token parameter variable">--mirror</span> Aliyun
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="启动-docker-服务" tabindex="-1"><a class="header-anchor" href="#启动-docker-服务"><span>启动 docker 服务</span></a></h3><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>systemctl daemon-reload
systemctl restart <span class="token function">docker</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="验证-docker-是否安装成功" tabindex="-1"><a class="header-anchor" href="#验证-docker-是否安装成功"><span>验证 docker 是否安装成功</span></a></h3><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">sudo</span> <span class="token function">docker</span> <span class="token parameter variable">--version</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="添加当前用户到-docker-用户组" tabindex="-1"><a class="header-anchor" href="#添加当前用户到-docker-用户组"><span>添加当前用户到 docker 用户组</span></a></h2><p>如果不想每次执行 docker 命令都需要加上 sudo，可以将当前用户添加到 docker 用户组。</p><h3 id="创建-docker-用户组" tabindex="-1"><a class="header-anchor" href="#创建-docker-用户组"><span>创建 docker 用户组</span></a></h3><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">sudo</span> <span class="token function">groupadd</span> <span class="token function">docker</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="将当前用户添加到-docker-用户组" tabindex="-1"><a class="header-anchor" href="#将当前用户添加到-docker-用户组"><span>将当前用户添加到 docker 用户组</span></a></h3><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">sudo</span> <span class="token function">usermod</span> <span class="token parameter variable">-aG</span> <span class="token function">docker</span> <span class="token environment constant">$USER</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>然后退出当前终端，重新登录即可。</p><h3 id="检查是否添加成功" tabindex="-1"><a class="header-anchor" href="#检查是否添加成功"><span>检查是否添加成功</span></a></h3><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">docker</span> version
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="批量清理无-tag-镜像" tabindex="-1"><a class="header-anchor" href="#批量清理无-tag-镜像"><span>批量清理无 tag 镜像</span></a></h2><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">docker</span> images <span class="token operator">|</span> <span class="token function">grep</span> none <span class="token operator">|</span> <span class="token function">awk</span> <span class="token string">&#39;{print $3}&#39;</span> <span class="token operator">|</span> <span class="token function">xargs</span> <span class="token function">docker</span> rmi
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,25),d=[r];function c(o,i){return a(),n("div",null,d)}const h=e(t,[["render",c],["__file","docker-installation.html.vue"]]),k=JSON.parse(`{"path":"/cloud-native/docker/docker-installation.html","title":"docker 安装","lang":"zh-CN","frontmatter":{"date":"2024-02-25T00:00:00.000Z","order":2,"description":"docker 安装 docker 介绍 docker 是一个开源的应用容器引擎，基于 go 语言并遵从 Apache2.0 协议开源。 docker 可以让开发者打包他们的应用以及依赖包到一个轻量级、可移植的容器中，然后发布到任何流行的 Linux 机器上，也可以实现虚拟化。 容器是完全使用沙箱机制，相互之间不会有任何接口。几乎没有性能开销，可以很容易...","head":[["meta",{"property":"og:url","content":"https://guoxicheng.top/cloud-native/docker/docker-installation.html"}],["meta",{"property":"og:site_name","content":"Guo's Page"}],["meta",{"property":"og:title","content":"docker 安装"}],["meta",{"property":"og:description","content":"docker 安装 docker 介绍 docker 是一个开源的应用容器引擎，基于 go 语言并遵从 Apache2.0 协议开源。 docker 可以让开发者打包他们的应用以及依赖包到一个轻量级、可移植的容器中，然后发布到任何流行的 Linux 机器上，也可以实现虚拟化。 容器是完全使用沙箱机制，相互之间不会有任何接口。几乎没有性能开销，可以很容易..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-03-07T07:17:20.000Z"}],["meta",{"property":"article:published_time","content":"2024-02-25T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-03-07T07:17:20.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"docker 安装\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2024-02-25T00:00:00.000Z\\",\\"dateModified\\":\\"2024-03-07T07:17:20.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"docker 介绍","slug":"docker-介绍","link":"#docker-介绍","children":[]},{"level":2,"title":"docker 安装","slug":"docker-安装-1","link":"#docker-安装-1","children":[{"level":3,"title":"下载安装脚本","slug":"下载安装脚本","link":"#下载安装脚本","children":[]},{"level":3,"title":"执行安装脚本","slug":"执行安装脚本","link":"#执行安装脚本","children":[]},{"level":3,"title":"启动 docker 服务","slug":"启动-docker-服务","link":"#启动-docker-服务","children":[]},{"level":3,"title":"验证 docker 是否安装成功","slug":"验证-docker-是否安装成功","link":"#验证-docker-是否安装成功","children":[]}]},{"level":2,"title":"添加当前用户到 docker 用户组","slug":"添加当前用户到-docker-用户组","link":"#添加当前用户到-docker-用户组","children":[{"level":3,"title":"创建 docker 用户组","slug":"创建-docker-用户组","link":"#创建-docker-用户组","children":[]},{"level":3,"title":"将当前用户添加到 docker 用户组","slug":"将当前用户添加到-docker-用户组","link":"#将当前用户添加到-docker-用户组","children":[]},{"level":3,"title":"检查是否添加成功","slug":"检查是否添加成功","link":"#检查是否添加成功","children":[]}]},{"level":2,"title":"批量清理无 tag 镜像","slug":"批量清理无-tag-镜像","link":"#批量清理无-tag-镜像","children":[]}],"git":{"createdTime":1709132036000,"updatedTime":1709795840000},"readingTime":{"minutes":1.1,"words":329},"filePathRelative":"cloud-native/docker/docker-installation.md","localizedDate":"2024年2月25日","autoDesc":true,"excerpt":"\\n<h2>docker 介绍</h2>\\n<p>docker 是一个开源的应用容器引擎，基于 go 语言并遵从 Apache2.0 协议开源。</p>\\n<p>docker 可以让开发者打包他们的应用以及依赖包到一个轻量级、可移植的容器中，然后发布到任何流行的 Linux 机器上，也可以实现虚拟化。</p>\\n<p>容器是完全使用沙箱机制，相互之间不会有任何接口。几乎没有性能开销，可以很容易地在机器和数据中心中运行。最重要的是，他们不依赖于任何语言、框架或包装系统。</p>\\n<h2>docker 安装</h2>\\n<h3>下载安装脚本</h3>\\n<div class=\\"language-bash\\" data-ext=\\"sh\\" data-title=\\"sh\\"><pre class=\\"language-bash\\"><code><span class=\\"token function\\">curl</span> <span class=\\"token parameter variable\\">-fsSL</span> https://get.docker.com <span class=\\"token parameter variable\\">-o</span> get-docker.sh\\n</code></pre></div>"}`);export{h as comp,k as data};
