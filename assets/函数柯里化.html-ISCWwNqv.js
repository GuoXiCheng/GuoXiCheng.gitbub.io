import{_ as n}from"./plugin-vue_export-helper-x3n3nnut.js";import{o as a,c as s,a as t}from"./app-bXWrYW9b.js";const e={},p=t(`<h1 id="函数柯里化" tabindex="-1"><a class="header-anchor" href="#函数柯里化"><span>函数柯里化</span></a></h1><p>函数柯里化是一种将接收多个参数的函数转化成多个接收一个参数的函数的过程，这些接收一个参数的函数称为“柯里化函数”。它们依次返回下一个柯里化函数，直至返回最终结果。</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token comment">// 非柯里化函数</span>
<span class="token keyword">function</span> <span class="token function">add</span><span class="token punctuation">(</span><span class="token parameter">a<span class="token punctuation">,</span> b</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token keyword">return</span> a <span class="token operator">+</span> b<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// 柯里化函数</span>
<span class="token keyword">function</span> <span class="token function">curriedAdd</span><span class="token punctuation">(</span><span class="token parameter">a</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token keyword">return</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">b</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">return</span> a <span class="token operator">+</span> b<span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> add5 <span class="token operator">=</span> <span class="token function">curriedAdd</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> result <span class="token operator">=</span> <span class="token function">add5</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,3),o=[p];function c(l,i){return a(),s("div",null,o)}const d=n(e,[["render",c],["__file","函数柯里化.html.vue"]]),k=JSON.parse(`{"path":"/knowledge/%E5%87%BD%E6%95%B0%E6%9F%AF%E9%87%8C%E5%8C%96.html","title":"函数柯里化","lang":"zh-CN","frontmatter":{"description":"函数柯里化 函数柯里化是一种将接收多个参数的函数转化成多个接收一个参数的函数的过程，这些接收一个参数的函数称为“柯里化函数”。它们依次返回下一个柯里化函数，直至返回最终结果。 ","head":[["meta",{"property":"og:url","content":"https://guoxicheng.top/knowledge/%E5%87%BD%E6%95%B0%E6%9F%AF%E9%87%8C%E5%8C%96.html"}],["meta",{"property":"og:site_name","content":"Guo's Page"}],["meta",{"property":"og:title","content":"函数柯里化"}],["meta",{"property":"og:description","content":"函数柯里化 函数柯里化是一种将接收多个参数的函数转化成多个接收一个参数的函数的过程，这些接收一个参数的函数称为“柯里化函数”。它们依次返回下一个柯里化函数，直至返回最终结果。 "}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-10-18T14:14:45.000Z"}],["meta",{"property":"article:modified_time","content":"2023-10-18T14:14:45.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"函数柯里化\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-10-18T14:14:45.000Z\\",\\"author\\":[]}"]]},"headers":[],"git":{"createdTime":1697638485000,"updatedTime":1697638485000},"readingTime":{"minutes":0.39,"words":118},"filePathRelative":"knowledge/函数柯里化.md","localizedDate":"2023年10月18日","autoDesc":true,"excerpt":"\\n<p>函数柯里化是一种将接收多个参数的函数转化成多个接收一个参数的函数的过程，这些接收一个参数的函数称为“柯里化函数”。它们依次返回下一个柯里化函数，直至返回最终结果。</p>\\n<div class=\\"language-javascript\\" data-ext=\\"js\\" data-title=\\"js\\"><pre class=\\"language-javascript\\"><code><span class=\\"token comment\\">// 非柯里化函数</span>\\n<span class=\\"token keyword\\">function</span> <span class=\\"token function\\">add</span><span class=\\"token punctuation\\">(</span><span class=\\"token parameter\\">a<span class=\\"token punctuation\\">,</span> b</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n\\t<span class=\\"token keyword\\">return</span> a <span class=\\"token operator\\">+</span> b<span class=\\"token punctuation\\">;</span>\\n<span class=\\"token punctuation\\">}</span>\\n\\n<span class=\\"token comment\\">// 柯里化函数</span>\\n<span class=\\"token keyword\\">function</span> <span class=\\"token function\\">curriedAdd</span><span class=\\"token punctuation\\">(</span><span class=\\"token parameter\\">a</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n\\t<span class=\\"token keyword\\">return</span> <span class=\\"token keyword\\">function</span><span class=\\"token punctuation\\">(</span><span class=\\"token parameter\\">b</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n\\t\\t<span class=\\"token keyword\\">return</span> a <span class=\\"token operator\\">+</span> b<span class=\\"token punctuation\\">;</span>\\n\\t<span class=\\"token punctuation\\">}</span>\\n<span class=\\"token punctuation\\">}</span>\\n\\n<span class=\\"token keyword\\">const</span> add5 <span class=\\"token operator\\">=</span> <span class=\\"token function\\">curriedAdd</span><span class=\\"token punctuation\\">(</span><span class=\\"token number\\">5</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token keyword\\">const</span> result <span class=\\"token operator\\">=</span> <span class=\\"token function\\">add5</span><span class=\\"token punctuation\\">(</span><span class=\\"token number\\">10</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n</code></pre></div>"}`);export{d as comp,k as data};
