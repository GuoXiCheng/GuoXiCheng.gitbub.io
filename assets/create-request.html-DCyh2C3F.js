import{_ as c}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as i,o as l,c as u,e as r,w as a,a as o,b as n,d as s}from"./app-DXiomTVF.js";const d={},k=o(`<h1 id="创建请求" tabindex="-1"><a class="header-anchor" href="#创建请求"><span>创建请求</span></a></h1><h2 id="安装-tinycrud" tabindex="-1"><a class="header-anchor" href="#安装-tinycrud"><span>安装 TinyCRUD</span></a></h2><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">npm</span> <span class="token function">install</span> tiny-crud
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="创建-issue" tabindex="-1"><a class="header-anchor" href="#创建-issue"><span>创建 Issue</span></a></h2><p>登入你的 Gitee/Github/Gitlab，选择一个合适的项目，创建一个 Issue，用于存放数据。</p><h2 id="创建请求-1" tabindex="-1"><a class="header-anchor" href="#创建请求-1"><span>创建请求</span></a></h2><h3 id="准备个人访问令牌" tabindex="-1"><a class="header-anchor" href="#准备个人访问令牌"><span>准备个人访问令牌</span></a></h3><table><tr><th>平台</th><th></th></tr><tr><td>Github</td><td><a href="http://www.baidu.com/s?wd=Gitee个人访问令牌">如何取得个人访问令牌</a></td></tr><tr><td>Gitlab</td><td><a href="http://www.baidu.com/s?wd=Gitee个人访问令牌">如何取得个人访问令牌</a></td></tr><tr><td>Gitee</td><td><a href="http://www.baidu.com/s?wd=Gitee个人访问令牌">如何取得个人访问令牌</a></td></tr></table><h3 id="创建请求对象" tabindex="-1"><a class="header-anchor" href="#创建请求对象"><span>创建请求对象</span></a></h3><p>如果是在 Node/Web 环境下，可以使用如下代码创建请求：</p>`,10),b=n("div",{class:"language-typescript line-numbers-mode","data-ext":"ts","data-title":"ts"},[n("pre",{class:"language-typescript"},[n("code",null,[n("span",{class:"token keyword"},"import"),s(" axios "),n("span",{class:"token keyword"},"from"),s(),n("span",{class:"token string"},'"axios"'),n("span",{class:"token punctuation"},";"),s(`
`),n("span",{class:"token keyword"},"import"),s(),n("span",{class:"token punctuation"},"{"),s(" createRequest "),n("span",{class:"token punctuation"},"}"),s(),n("span",{class:"token keyword"},"from"),s(),n("span",{class:"token string"},'"tiny-crud"'),n("span",{class:"token punctuation"},";"),s(`

`),n("span",{class:"token keyword"},"const"),s(" GithubRequest "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token function"},"createRequest"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"{"),s(`
    httpLib`),n("span",{class:"token operator"},":"),s(),n("span",{class:"token string"},'"axios"'),n("span",{class:"token punctuation"},","),s(`
    httpClient`),n("span",{class:"token operator"},":"),s(" axios"),n("span",{class:"token punctuation"},","),s(`
    accessToken`),n("span",{class:"token operator"},":"),s(),n("span",{class:"token string"},'"Your Personal Access Token"'),n("span",{class:"token punctuation"},","),s(`

    platform`),n("span",{class:"token operator"},":"),s(),n("span",{class:"token string"},'"github"'),n("span",{class:"token punctuation"},","),s(`
    owner`),n("span",{class:"token operator"},":"),s(),n("span",{class:"token string"},'"Your Owner"'),n("span",{class:"token punctuation"},","),s(`
    repo`),n("span",{class:"token operator"},":"),s(),n("span",{class:"token string"},'"Your Repo"'),n("span",{class:"token punctuation"},","),s(`
`),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),v=n("div",{class:"language-typescript line-numbers-mode","data-ext":"ts","data-title":"ts"},[n("pre",{class:"language-typescript"},[n("code",null,[n("span",{class:"token keyword"},"import"),s(" axios "),n("span",{class:"token keyword"},"from"),s(),n("span",{class:"token string"},'"axios"'),n("span",{class:"token punctuation"},";"),s(`
`),n("span",{class:"token keyword"},"import"),s(),n("span",{class:"token punctuation"},"{"),s(" createRequest "),n("span",{class:"token punctuation"},"}"),s(),n("span",{class:"token keyword"},"from"),s(),n("span",{class:"token string"},'"tiny-crud"'),n("span",{class:"token punctuation"},";"),s(`

`),n("span",{class:"token keyword"},"const"),s(" gitlabRequest "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token function"},"createRequest"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"{"),s(`
    httpLib`),n("span",{class:"token operator"},":"),s(),n("span",{class:"token string"},'"axios"'),n("span",{class:"token punctuation"},","),s(`
    httpClient`),n("span",{class:"token operator"},":"),s(" axios"),n("span",{class:"token punctuation"},","),s(`
    accessToken`),n("span",{class:"token operator"},":"),s(),n("span",{class:"token string"},'"Your Personal Access Token"'),n("span",{class:"token punctuation"},","),s(`

    platform`),n("span",{class:"token operator"},":"),s(),n("span",{class:"token string"},'"gitlab"'),n("span",{class:"token punctuation"},","),s(`
    projectId`),n("span",{class:"token operator"},":"),s(),n("span",{class:"token string"},'"Your Project ID"'),n("span",{class:"token punctuation"},","),s(`
`),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),m=n("div",{class:"language-typescript line-numbers-mode","data-ext":"ts","data-title":"ts"},[n("pre",{class:"language-typescript"},[n("code",null,[n("span",{class:"token keyword"},"import"),s(" axios "),n("span",{class:"token keyword"},"from"),s(),n("span",{class:"token string"},'"axios"'),n("span",{class:"token punctuation"},";"),s(`
`),n("span",{class:"token keyword"},"import"),s(),n("span",{class:"token punctuation"},"{"),s(" createRequest "),n("span",{class:"token punctuation"},"}"),s(),n("span",{class:"token keyword"},"from"),s(),n("span",{class:"token string"},'"tiny-crud"'),n("span",{class:"token punctuation"},";"),s(`

`),n("span",{class:"token keyword"},"const"),s(" giteeRequest "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token function"},"createRequest"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"{"),s(`
    httpLib`),n("span",{class:"token operator"},":"),s(),n("span",{class:"token string"},'"axios"'),n("span",{class:"token punctuation"},","),s(`
    httpClient`),n("span",{class:"token operator"},":"),s(" axios"),n("span",{class:"token punctuation"},","),s(`
    accessToken`),n("span",{class:"token operator"},":"),s(),n("span",{class:"token string"},'"Your Personal Access Token"'),n("span",{class:"token punctuation"},","),s(`

    platform`),n("span",{class:"token operator"},":"),s(),n("span",{class:"token string"},'"gitee"'),n("span",{class:"token punctuation"},","),s(`
    owner`),n("span",{class:"token operator"},":"),s(),n("span",{class:"token string"},'"Your Owner"'),n("span",{class:"token punctuation"},","),s(`
    repo`),n("span",{class:"token operator"},":"),s(),n("span",{class:"token string"},'"Your Repo"'),n("span",{class:"token punctuation"},","),s(`
`),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),h=o(`<div class="hint-container tip"><p class="hint-container-title">提示</p><p>安装 Axios 用于 Web/Node 环境下创建请求</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">npm</span> i axios
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></div><p>如果是在微信小程序环境下，可以使用如下代码创建请求：</p><div class="language-typescript line-numbers-mode" data-ext="ts" data-title="ts"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> createRequest <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;tiny-crud&quot;</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> githubRequest <span class="token operator">=</span> <span class="token function">createRequest</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    httpLib<span class="token operator">:</span> <span class="token string">&quot;wx&quot;</span><span class="token punctuation">,</span>
    httpClient<span class="token operator">:</span> wx<span class="token punctuation">,</span>
    accessToken<span class="token operator">:</span> <span class="token string">&quot;Your Personal Access Token&quot;</span><span class="token punctuation">,</span>

    platform<span class="token operator">:</span> <span class="token string">&quot;github&quot;</span><span class="token punctuation">,</span>
    owner<span class="token operator">:</span> <span class="token string">&quot;Your Owner&quot;</span><span class="token punctuation">,</span>
    repo<span class="token operator">:</span> <span class="token string">&quot;Your Repo&quot;</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>默认情况下会使用官方的 API 地址，如果你需要将数据存储在私有的代码托管服务器上，可以使用 baseURL 字段指定 URL 地址：</p>`,4),g=n("div",{class:"language-typescript line-numbers-mode","data-ext":"ts","data-title":"ts"},[n("pre",{ts:"",class:"language-typescript"},[n("code",null,[n("span",{class:"token keyword"},"const"),s(" githubRequest "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token function"},"createRequest"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"{"),s(`
    httpLib`),n("span",{class:"token operator"},":"),s(),n("span",{class:"token string"},'"axios"'),n("span",{class:"token punctuation"},","),s(`
    httpClient`),n("span",{class:"token operator"},":"),s(" axios"),n("span",{class:"token punctuation"},","),s(`
    accessToken`),n("span",{class:"token operator"},":"),s(),n("span",{class:"token string"},'"Your Personal Access Token"'),n("span",{class:"token punctuation"},","),s(`

    platform`),n("span",{class:"token operator"},":"),s(),n("span",{class:"token string"},'"github"'),n("span",{class:"token punctuation"},","),s(`
    owner`),n("span",{class:"token operator"},":"),s(),n("span",{class:"token string"},'"Your Owner"'),n("span",{class:"token punctuation"},","),s(`
    repo`),n("span",{class:"token operator"},":"),s(),n("span",{class:"token string"},'"Your Repo"'),n("span",{class:"token punctuation"},","),s(`
    baseURL`),n("span",{class:"token operator"},":"),s(),n("span",{class:"token string"},'"https://your-github-api.com"'),n("span",{class:"token punctuation"},","),s(`
`),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
`)])]),n("div",{class:"highlight-lines"},[n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("div",{class:"highlight-line"}," "),n("br")]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),y=o("<p>TinyCRUD 中使用的官方 API 地址参考如下：</p><table><thead><tr><th>平台</th><th>API 地址</th></tr></thead><tbody><tr><td>Github</td><td><code>https://api.github.com</code></td></tr><tr><td>Gitlab</td><td><code>https://gitlab.com</code></td></tr><tr><td>Gitee</td><td><code>https://gitee.com</code></td></tr></tbody></table><p>你可以为该请求对象提供一个 Issue 编号，这样 TinyCRUD 将会使用该 Issue 存储数据：</p>",3),f=n("div",{class:"language-typescript line-numbers-mode","data-ext":"ts","data-title":"ts"},[n("pre",{ts:"",class:"language-typescript"},[n("code",null,[n("span",{class:"token keyword"},"const"),s(" githubRequest "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token function"},"createRequest"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"{"),s(`
    httpLib`),n("span",{class:"token operator"},":"),s(),n("span",{class:"token string"},'"axios"'),n("span",{class:"token punctuation"},","),s(`
    httpClient`),n("span",{class:"token operator"},":"),s(" axios"),n("span",{class:"token punctuation"},","),s(`
    accessToken`),n("span",{class:"token operator"},":"),s(),n("span",{class:"token string"},'"Your Personal Access Token"'),n("span",{class:"token punctuation"},","),s(`

    platform`),n("span",{class:"token operator"},":"),s(),n("span",{class:"token string"},'"github"'),n("span",{class:"token punctuation"},","),s(`
    owner`),n("span",{class:"token operator"},":"),s(),n("span",{class:"token string"},'"Your Owner"'),n("span",{class:"token punctuation"},","),s(`
    repo`),n("span",{class:"token operator"},":"),s(),n("span",{class:"token string"},'"Your Repo"'),n("span",{class:"token punctuation"},","),s(`
    baseURL`),n("span",{class:"token operator"},":"),s(),n("span",{class:"token string"},'"https://your-github-api.com"'),n("span",{class:"token punctuation"},","),s(`

    issueNumber`),n("span",{class:"token operator"},":"),s(),n("span",{class:"token string"},'"Your Issue Number"'),n("span",{class:"token punctuation"},","),s(`
`),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
`)])]),n("div",{class:"highlight-lines"},[n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("div",{class:"highlight-line"}," "),n("br")]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),q=o(`<h2 id="验证授权" tabindex="-1"><a class="header-anchor" href="#验证授权"><span>验证授权</span></a></h2><div class="language-typescript line-numbers-mode" data-ext="ts" data-title="ts"><pre class="language-typescript"><code><span class="token keyword">this</span><span class="token punctuation">.</span>githubRequest<span class="token punctuation">.</span><span class="token function">authenticate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="使用加密" tabindex="-1"><a class="header-anchor" href="#使用加密"><span>使用加密</span></a></h2><p>当 useEncrypt 字段为 true 时，TinyCRUD 将会对数据进行加密，然后再存储到 Issue 中，当从 Issue 中读取数据时，TinyCRUD 将会对数据进行解密。</p><p>因此，当 useEncrypt 字段为 true 时，你必须实现加密函数 encryptFn 和解密函数 decryptFn，TinyCRUD 将会使用这两个函数对数据进行加解密。</p><p>例如使用 crypto-js 进行加解密，可以使用如下代码：</p><div class="language-typescript line-numbers-mode" data-ext="ts" data-title="ts"><pre class="language-typescript"><code><span class="token keyword">import</span> CryptoJS <span class="token keyword">from</span> <span class="token string">&quot;crypto-js&quot;</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> githubRequest <span class="token operator">=</span> <span class="token function">createRequest</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    httpLib<span class="token operator">:</span> <span class="token string">&quot;axios&quot;</span><span class="token punctuation">,</span>
    httpClient<span class="token operator">:</span> axios<span class="token punctuation">,</span>
    accessToken<span class="token operator">:</span> <span class="token string">&quot;Your Personal Access Token&quot;</span><span class="token punctuation">,</span>

    platform<span class="token operator">:</span> <span class="token string">&quot;github&quot;</span><span class="token punctuation">,</span>
    owner<span class="token operator">:</span> <span class="token string">&quot;Your Owner&quot;</span><span class="token punctuation">,</span>
    repo<span class="token operator">:</span> <span class="token string">&quot;Your Repo&quot;</span><span class="token punctuation">,</span>

    useEncrypt<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
    <span class="token function-variable function">encryptFn</span><span class="token operator">:</span> <span class="token punctuation">(</span>data<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> CryptoJS<span class="token punctuation">.</span><span class="token constant">AES</span><span class="token punctuation">.</span><span class="token function">encrypt</span><span class="token punctuation">(</span>data<span class="token punctuation">,</span> <span class="token string">&quot;Your Secret Key&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token function-variable function">decryptFn</span><span class="token operator">:</span> <span class="token punctuation">(</span>data<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> CryptoJS<span class="token punctuation">.</span><span class="token constant">AES</span><span class="token punctuation">.</span><span class="token function">decrypt</span><span class="token punctuation">(</span>data<span class="token punctuation">,</span> <span class="token string">&quot;Your Secret Key&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span>
            CryptoJS<span class="token punctuation">.</span>enc<span class="token punctuation">.</span>Utf8
        <span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="hint-container tip"><p class="hint-container-title">提示</p><p>安装 crypto-js 用于加解密</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">npm</span> i crypto-js
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></div><p>当 useEncrypt 字段为 false 时，加解密函数 encryptFn 和 decryptFn 将会被忽略。</p><p>因此，你可以根据不同的环境，选择使用加密或者不使用，例如：</p><div class="language-typescript line-numbers-mode" data-ext="ts" data-title="ts"><pre class="language-typescript"><code><span class="token keyword">const</span> githubRequest <span class="token operator">=</span> <span class="token function">createRequest</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    httpLib<span class="token operator">:</span> <span class="token string">&quot;axios&quot;</span><span class="token punctuation">,</span>
    httpClient<span class="token operator">:</span> axios<span class="token punctuation">,</span>
    accessToken<span class="token operator">:</span> <span class="token string">&quot;Your Personal Access Token&quot;</span><span class="token punctuation">,</span>

    platform<span class="token operator">:</span> <span class="token string">&quot;github&quot;</span><span class="token punctuation">,</span>
    owner<span class="token operator">:</span> <span class="token string">&quot;Your Owner&quot;</span><span class="token punctuation">,</span>
    repo<span class="token operator">:</span> <span class="token string">&quot;Your Repo&quot;</span><span class="token punctuation">,</span>

    useEncrypt<span class="token operator">:</span> process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">NODE_ENV</span> <span class="token operator">===</span> <span class="token string">&quot;production&quot;</span><span class="token punctuation">,</span>
    <span class="token function-variable function">encryptFn</span><span class="token operator">:</span> <span class="token punctuation">(</span>data<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> CryptoJS<span class="token punctuation">.</span><span class="token constant">AES</span><span class="token punctuation">.</span><span class="token function">encrypt</span><span class="token punctuation">(</span>data<span class="token punctuation">,</span> <span class="token string">&quot;Your Secret Key&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token function-variable function">decryptFn</span><span class="token operator">:</span> <span class="token punctuation">(</span>data<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> CryptoJS<span class="token punctuation">.</span><span class="token constant">AES</span><span class="token punctuation">.</span><span class="token function">decrypt</span><span class="token punctuation">(</span>data<span class="token punctuation">,</span> <span class="token string">&quot;Your Secret Key&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span>
            CryptoJS<span class="token punctuation">.</span>enc<span class="token punctuation">.</span>Utf8
        <span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,11);function w(x,R){const p=i("CodeTabs");return l(),u("div",null,[k,r(p,{id:"26",data:[{id:"github"},{id:"gitlab"},{id:"gitee"}]},{title0:a(({value:t,isActive:e})=>[s("github")]),title1:a(({value:t,isActive:e})=>[s("gitlab")]),title2:a(({value:t,isActive:e})=>[s("gitee")]),tab0:a(({value:t,isActive:e})=>[b]),tab1:a(({value:t,isActive:e})=>[v]),tab2:a(({value:t,isActive:e})=>[m]),_:1}),h,g,y,f,q])}const C=c(d,[["render",w],["__file","create-request.html.vue"]]),Y=JSON.parse(`{"path":"/projects/TinyCRUD-Docs/create-request.html","title":"创建请求","lang":"zh-CN","frontmatter":{"index":true,"order":1,"description":"创建请求 安装 TinyCRUD 创建 Issue 登入你的 Gitee/Github/Gitlab，选择一个合适的项目，创建一个 Issue，用于存放数据。 创建请求 准备个人访问令牌 创建请求对象 如果是在 Node/Web 环境下，可以使用如下代码创建请求： 提示 安装 Axios 用于 Web/Node 环境下创建请求 如果是在微信小程序环境下...","head":[["link",{"rel":"alternate","hreflang":"en-us","href":"https://guoxicheng.top/en/projects/TinyCRUD-Docs/create-request.html"}],["meta",{"property":"og:url","content":"https://guoxicheng.top/projects/TinyCRUD-Docs/create-request.html"}],["meta",{"property":"og:site_name","content":"Guo's Page"}],["meta",{"property":"og:title","content":"创建请求"}],["meta",{"property":"og:description","content":"创建请求 安装 TinyCRUD 创建 Issue 登入你的 Gitee/Github/Gitlab，选择一个合适的项目，创建一个 Issue，用于存放数据。 创建请求 准备个人访问令牌 创建请求对象 如果是在 Node/Web 环境下，可以使用如下代码创建请求： 提示 安装 Axios 用于 Web/Node 环境下创建请求 如果是在微信小程序环境下..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:locale:alternate","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2024-01-30T08:56:26.000Z"}],["meta",{"property":"article:modified_time","content":"2024-01-30T08:56:26.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"创建请求\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-01-30T08:56:26.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"安装 TinyCRUD","slug":"安装-tinycrud","link":"#安装-tinycrud","children":[]},{"level":2,"title":"创建 Issue","slug":"创建-issue","link":"#创建-issue","children":[]},{"level":2,"title":"创建请求","slug":"创建请求-1","link":"#创建请求-1","children":[{"level":3,"title":"准备个人访问令牌","slug":"准备个人访问令牌","link":"#准备个人访问令牌","children":[]},{"level":3,"title":"创建请求对象","slug":"创建请求对象","link":"#创建请求对象","children":[]}]},{"level":2,"title":"验证授权","slug":"验证授权","link":"#验证授权","children":[]},{"level":2,"title":"使用加密","slug":"使用加密","link":"#使用加密","children":[]}],"git":{"createdTime":1705888903000,"updatedTime":1706604986000},"readingTime":{"minutes":2.61,"words":783},"filePathRelative":"projects/TinyCRUD-Docs/create-request.md","localizedDate":"2024年1月22日","autoDesc":true,"excerpt":"\\n<h2>安装 TinyCRUD</h2>\\n<div class=\\"language-bash\\" data-ext=\\"sh\\" data-title=\\"sh\\"><pre class=\\"language-bash\\"><code><span class=\\"token function\\">npm</span> <span class=\\"token function\\">install</span> tiny-crud\\n</code></pre></div><h2>创建 Issue</h2>\\n<p>登入你的 Gitee/Github/Gitlab，选择一个合适的项目，创建一个 Issue，用于存放数据。</p>"}`);export{C as comp,Y as data};
