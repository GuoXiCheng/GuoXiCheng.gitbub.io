const e=JSON.parse(`{"key":"v-1a4a77a5","path":"/design-pattern/behavioral/state.html","title":"状态模式","lang":"zh-CN","frontmatter":{"description":"核心思想 状态模式允许一个对象在其内部状态改变时改变它的行为，使其看上去就像改变了自身所属的类。 典型用例 订单管理 在订单管理系统中，订单会有不同的状态: 新订单、已支付、已发货、已完成、已取消。每个状态会有不同的处理逻辑。 在这个例子中，每个具体的订单状态类都知道如何处理当前状态并将上下文移至下一状态，这种方式使得添加新的状态或改变状态转换逻辑变得...","head":[["meta",{"property":"og:url","content":"https://guoxicheng.top/design-pattern/behavioral/state.html"}],["meta",{"property":"og:site_name","content":"Guo's Page"}],["meta",{"property":"og:title","content":"状态模式"}],["meta",{"property":"og:description","content":"核心思想 状态模式允许一个对象在其内部状态改变时改变它的行为，使其看上去就像改变了自身所属的类。 典型用例 订单管理 在订单管理系统中，订单会有不同的状态: 新订单、已支付、已发货、已完成、已取消。每个状态会有不同的处理逻辑。 在这个例子中，每个具体的订单状态类都知道如何处理当前状态并将上下文移至下一状态，这种方式使得添加新的状态或改变状态转换逻辑变得..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-11-26T14:39:29.000Z"}],["meta",{"property":"article:modified_time","content":"2023-11-26T14:39:29.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"状态模式\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-11-26T14:39:29.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"核心思想","slug":"核心思想","link":"#核心思想","children":[]},{"level":2,"title":"典型用例","slug":"典型用例","link":"#典型用例","children":[{"level":3,"title":"订单管理","slug":"订单管理","link":"#订单管理","children":[]},{"level":3,"title":"状态机管理","slug":"状态机管理","link":"#状态机管理","children":[]},{"level":3,"title":"界面控件的状态","slug":"界面控件的状态","link":"#界面控件的状态","children":[]},{"level":3,"title":"网络连接管理","slug":"网络连接管理","link":"#网络连接管理","children":[]},{"level":3,"title":"工作流管理","slug":"工作流管理","link":"#工作流管理","children":[]}]}],"git":{"createdTime":1698890691000,"updatedTime":1701009569000},"readingTime":{"minutes":1.77,"words":532},"filePathRelative":"design-pattern/behavioral/state.md","localizedDate":"2023年11月2日","autoDesc":true}`);export{e as data};
