import{_ as i}from"./plugin-vue_export-helper-x3n3nnut.js";import{r as o,o as d,c as p,d as a,e,f as s,b as r}from"./app--xdMrcUJ.js";const l="/assets/image/skip-docs/layout-reference.png",c="/assets/image/skip-docs/skip-bottom-screenshot.jpg",h="/assets/image/skip-docs/android-rect.png",u={},_=r(`<h1 id="贡献指南参考" tabindex="-1"><a class="header-anchor" href="#贡献指南参考" aria-hidden="true">#</a> 贡献指南参考</h1><h2 id="实现原理" tabindex="-1"><a class="header-anchor" href="#实现原理" aria-hidden="true">#</a> 实现原理</h2><p>利用Android无障碍服务，获取当前窗口对象，遍历窗口节点，当节点符合指定条件时，执行点击的动作。</p><h2 id="核心逻辑" tabindex="-1"><a class="header-anchor" href="#核心逻辑" aria-hidden="true">#</a> 核心逻辑</h2><div class="language-mermaid line-numbers-mode" data-ext="mermaid"><pre class="language-mermaid"><code><span class="token keyword">graph</span>
    A<span class="token text string">[根据text查找节点]</span> <span class="token arrow operator">--&gt;</span> B<span class="token text string">{是否存在}</span>
    B <span class="token inter-arrow-label"><span class="token arrow-head arrow operator">--</span> <span class="token label property">是</span> <span class="token arrow operator">--&gt;</span></span> C<span class="token text string">[点击节点]</span>
    B <span class="token inter-arrow-label"><span class="token arrow-head arrow operator">--</span> <span class="token label property">否</span> <span class="token arrow operator">--&gt;</span></span> D<span class="token text string">[根据id查找节点]</span> <span class="token arrow operator">--&gt;</span> E<span class="token text string">{是否存在}</span>
    E <span class="token inter-arrow-label"><span class="token arrow-head arrow operator">--</span> <span class="token label property">是</span> <span class="token arrow operator">--&gt;</span></span> C
    E <span class="token inter-arrow-label"><span class="token arrow-head arrow operator">--</span> <span class="token label property">否</span> <span class="token arrow operator">--&gt;</span></span> F<span class="token text string">[根据bounds查找节点]</span> <span class="token arrow operator">--&gt;</span> G<span class="token text string">{是否存在}</span> 
    G <span class="token inter-arrow-label"><span class="token arrow-head arrow operator">--</span> <span class="token label property">是</span> <span class="token arrow operator">--&gt;</span></span> C
    G <span class="token inter-arrow-label"><span class="token arrow-head arrow operator">--</span> <span class="token label property">否</span> <span class="token arrow operator">--&gt;</span></span> H<span class="token text string">[结束]</span>

    <span class="token keyword">classDef</span> default <span class="token style"><span class="token property">color</span><span class="token operator">:</span>#fff</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="配置文件选项" tabindex="-1"><a class="header-anchor" href="#配置文件选项" aria-hidden="true">#</a> 配置文件选项</h2>`,6),k={href:"https://github.com/GuoXiCheng/SKIP/blob/main/app/src/main/assets/skip_config.yaml",target:"_blank",rel:"noopener noreferrer"},b=a("p",null,"打开“SKIP”应用后，会自动同步最新配置",-1),g={id:"package-name",tabindex:"-1"},m=a("a",{class:"header-anchor",href:"#package-name","aria-hidden":"true"},"#",-1),x=a("p",null,"应用包名",-1),f=a("p",null,"在手机桌面长按应用图标，打开“应用信息”，点击右上角“应用详情”，可以查看应用包名。",-1),v={id:"max-click-count",tabindex:"-1"},w=a("a",{class:"header-anchor",href:"#max-click-count","aria-hidden":"true"},"#",-1),y=a("p",null,"最大点击次数",-1),A=a("p",null,"设置为0时，即使查询到指定节点，也不执行点击动作。",-1),B={id:"skip-text",tabindex:"-1"},I=a("a",{class:"header-anchor",href:"#skip-text","aria-hidden":"true"},"#",-1),S=a("p",null,[e("根据文本匹配，当节点的文本"),a("strong",null,"包含"),e("指定字符串时，执行点击动作。")],-1),C=a("p",null,"在手机屏幕上看到的文本是什么就可以填什么，但是实际节点text为null时，会失效。",-1),E={id:"skip-id",tabindex:"-1"},K=a("a",{class:"header-anchor",href:"#skip-id","aria-hidden":"true"},"#",-1),P=a("p",null,[e("根据id匹配，当节点的id"),a("strong",null,"包含"),e("指定字符串时，执行点击动作。")],-1),G=a("p",null,[e("id需要使用"),a("strong",null,"Android布局分析工具"),e("查询，但实际节点id为null时，不可用。")],-1),N={id:"skip-bounds",tabindex:"-1"},V=a("a",{class:"header-anchor",href:"#skip-bounds","aria-hidden":"true"},"#",-1),z=a("p",null,[e("根据bounds匹配，当所设定的bounds"),a("strong",null,"包含"),e("节点的bounds时，执行点击动作。")],-1),D=a("p",null,[e("一般可交互的节点都会具有bounds，需要使用"),a("strong",null,"Android布局分析工具"),e("查询，"),a("code",null,"skip_bounds"),e("可以配置多个。")],-1),L=a("h2",{id:"android布局分析工具",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#android布局分析工具","aria-hidden":"true"},"#"),e(" Android布局分析工具")],-1),j={href:"https://github.com/alibaba/web-editor",target:"_blank",rel:"noopener noreferrer"},F=r('<h3 id="应用布局参考图" tabindex="-1"><a class="header-anchor" href="#应用布局参考图" aria-hidden="true">#</a> 应用布局参考图</h3><p>当你选中想要的目标节点时，会显示该节点的布局结构，参考如下：</p><figure><img src="'+l+`" alt="应用布局参考图" width="300" tabindex="0" loading="lazy"><figcaption>应用布局参考图</figcaption></figure><h3 id="配置skip-text和skip-id" tabindex="-1"><a class="header-anchor" href="#配置skip-text和skip-id" aria-hidden="true">#</a> 配置skip_text和skip_id</h3><p><code>text</code>呈现的值，可以对应到配置文件中的<code>skip_text</code></p><p><code>resourceId</code>呈现的值，可以对应到配置文件中的<code>skip_id</code></p><h3 id="配置skip-bounds" tabindex="-1"><a class="header-anchor" href="#配置skip-bounds" aria-hidden="true">#</a> 配置skip_bounds</h3><p>skip_bounds的值是需要计算得到的，skip_bounds的值可能长得像这样</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>1440,3024#1067,230,1195,274
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>其中的1440,3024是你当前手机屏幕的最大宽高，可以在SKIP-v1.4版本的主界面查看到：</p><p>主要作用是将设定中的bounds按比例转换为当前屏幕适配的bounds。</p><figure><img src="`+c+'" alt="SKIP页脚" width="300" tabindex="0" loading="lazy"><figcaption>SKIP页脚</figcaption></figure><p>其中的1067,230,1195,274分别表示一个节点在屏幕中的: left,top,right,bottom</p><p>参考上图中rect的信息: left=x,top=y,right=x+width,bottom=y+height</p><figure><img src="'+h+'" alt="Android屏幕节点布局" width="300" tabindex="0" loading="lazy"><figcaption>Android屏幕节点布局</figcaption></figure>',15);function H(T,X){const t=o("ExternalLinkIcon"),n=o("Badge");return d(),p("div",null,[_,a("p",null,[e("配置文件位置："),a("a",k,[e("配置文件"),s(t)])]),b,a("h3",g,[m,e(" package_name "),s(n,{text:"必填",type:"danger",vertical:"middle"})]),x,f,a("h3",v,[w,e(" max_click_count "),s(n,{text:"选填",type:"tip",vertical:"middle"})]),y,A,a("h3",B,[I,e(" skip_text "),s(n,{text:"选填",type:"tip",vertical:"middle"})]),S,C,a("h3",E,[K,e(" skip_id "),s(n,{text:"选填",type:"tip",vertical:"middle"})]),P,G,a("h3",N,[V,e(" skip_bounds "),s(n,{text:"选填",type:"tip",vertical:"middle"})]),z,D,L,a("p",null,[e("我使用的是："),a("a",j,[e("web-editor"),s(t)]),e("，使用Android Studio自带的或其他工具也一样，只要可以探查屏幕节点的布局结构即可。")]),F])}const M=i(u,[["render",H],["__file","003-contribute.html.vue"]]);export{M as default};
