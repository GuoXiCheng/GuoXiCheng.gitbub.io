import{_ as t}from"./plugin-vue_export-helper-c27b6911.js";import{o,c as s,d as e,f as _}from"./app-3586f4e1.js";const n={},c=e("h1",{id:"闭包",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#闭包","aria-hidden":"true"},"#"),_(" 闭包")],-1),a=e("p",null,"闭包是一个函数。",-1),l=e("p",null,"闭包可以让内层函数记住并访问外层函数的作用域，即使外层函数已经销毁。",-1),r=e("p",null,"闭包的一个使用场景是：封装私有变量。",-1),d=e("p",null,"在原生JS中没有私有变量的概念，可以使用闭包实现类似的效果。例如在函数内部定义变量，并返回一组内部函数，用于访问和操作内部变量，而函数外部不可直接访问这些内部变量。",-1),i=e("p",null,"另一个使用场景是：延长变量的生命周期，例如[[函数柯里化]]",-1),h=[c,a,l,r,d,i];function u(f,p){return o(),s("div",null,h)}const B=t(n,[["render",u],["__file","闭包.html.vue"]]);export{B as default};
