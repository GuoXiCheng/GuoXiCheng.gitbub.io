const e=JSON.parse(`{"key":"v-a9c08df6","path":"/design-pattern/creational/factory-method.html","title":"工厂方法模式","lang":"zh-CN","frontmatter":{"order":1,"description":"核心思想 工厂方法模式提供一个接口，让这个接口的实现来决定实例化哪个类。 典型用例 依赖注入 当一个类需要创建依赖对象，而又不应该知道具体的类时，可以使用工厂方法模式。例如：在使用日志记录器时，客户端无需知道具体使用哪种日志记录器，而只需与日志工厂接口交互。 这种方式支持依赖倒置原则，使得高级模块（客户端）不会依赖于低级模块（具体的日志记录器），而是依...","head":[["meta",{"property":"og:url","content":"https://guoxicheng.top/design-pattern/creational/factory-method.html"}],["meta",{"property":"og:site_name","content":"Guo's Page"}],["meta",{"property":"og:title","content":"工厂方法模式"}],["meta",{"property":"og:description","content":"核心思想 工厂方法模式提供一个接口，让这个接口的实现来决定实例化哪个类。 典型用例 依赖注入 当一个类需要创建依赖对象，而又不应该知道具体的类时，可以使用工厂方法模式。例如：在使用日志记录器时，客户端无需知道具体使用哪种日志记录器，而只需与日志工厂接口交互。 这种方式支持依赖倒置原则，使得高级模块（客户端）不会依赖于低级模块（具体的日志记录器），而是依..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-11-22T02:11:20.000Z"}],["meta",{"property":"article:modified_time","content":"2023-11-22T02:11:20.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"工厂方法模式\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-11-22T02:11:20.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"核心思想","slug":"核心思想","link":"#核心思想","children":[]},{"level":2,"title":"典型用例","slug":"典型用例","link":"#典型用例","children":[{"level":3,"title":"依赖注入","slug":"依赖注入","link":"#依赖注入","children":[]},{"level":3,"title":"创建不同类型对象","slug":"创建不同类型对象","link":"#创建不同类型对象","children":[]},{"level":3,"title":"扩展类库或框架","slug":"扩展类库或框架","link":"#扩展类库或框架","children":[]},{"level":3,"title":"替代子类化","slug":"替代子类化","link":"#替代子类化","children":[]},{"level":3,"title":"解耦代码","slug":"解耦代码","link":"#解耦代码","children":[]}]}],"git":{"createdTime":1698306618000,"updatedTime":1700619080000},"readingTime":{"minutes":3.36,"words":1007},"filePathRelative":"design-pattern/creational/factory-method.md","localizedDate":"2023年10月26日","autoDesc":true}`);export{e as data};
