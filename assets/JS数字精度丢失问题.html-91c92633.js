const e=JSON.parse(`{"key":"v-31bbf4f3","path":"/knowledge/JS%E6%95%B0%E5%AD%97%E7%B2%BE%E5%BA%A6%E4%B8%A2%E5%A4%B1%E9%97%AE%E9%A2%98.html","title":"JS数字精度丢失问题","lang":"zh-CN","frontmatter":{"description":"JS中的数字是以科学计数法的形式存储64位双精度浮点数编码。 其中第1位为符号位，0表示正数，1表示负数；中间11位为指数位；最后52位为尾数位，会舍0进1。 在计算时会将十进制数转换成二进制，计算完成后再转换成十进制数，并且由于小数位数无限但二进制位数有限，因此引起计算误差，造成数字精度丢失。 解决方法是将小数转换成整数在计算，或是使用第三方库Mat...","head":[["meta",{"property":"og:url","content":"https://vuepress-theme-hope-docs-demo.netlify.app/knowledge/JS%E6%95%B0%E5%AD%97%E7%B2%BE%E5%BA%A6%E4%B8%A2%E5%A4%B1%E9%97%AE%E9%A2%98.html"}],["meta",{"property":"og:site_name","content":"Guo's Page"}],["meta",{"property":"og:title","content":"JS数字精度丢失问题"}],["meta",{"property":"og:description","content":"JS中的数字是以科学计数法的形式存储64位双精度浮点数编码。 其中第1位为符号位，0表示正数，1表示负数；中间11位为指数位；最后52位为尾数位，会舍0进1。 在计算时会将十进制数转换成二进制，计算完成后再转换成十进制数，并且由于小数位数无限但二进制位数有限，因此引起计算误差，造成数字精度丢失。 解决方法是将小数转换成整数在计算，或是使用第三方库Mat..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-10-19T14:28:28.000Z"}],["meta",{"property":"article:modified_time","content":"2023-10-19T14:28:28.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"JS数字精度丢失问题\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-10-19T14:28:28.000Z\\",\\"author\\":[]}"]]},"headers":[],"git":{"createdTime":1697725708000,"updatedTime":1697725708000,"contributors":[{"name":"GuoXiCheng","email":"34238809+GuoXiCheng@users.noreply.github.com","commits":1}]},"readingTime":{"minutes":0.55,"words":166},"filePathRelative":"knowledge/JS数字精度丢失问题.md","localizedDate":"2023年10月19日","autoDesc":true}`);export{e as data};
