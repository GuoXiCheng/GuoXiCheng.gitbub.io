import{_ as t}from"./plugin-vue_export-helper-x3n3nnut.js";import{o as e,c as d,a as o}from"./app-g-uzAAUD.js";const r={},c=o('<h1 id="test-coverage-example" tabindex="-1"><a class="header-anchor" href="#test-coverage-example"><span>Test Coverage Example</span></a></h1><table><tr><th>Coverage</th><th>Example</th></tr><tr><td>Simplecov (Ruby)</td><td><code>/\\(\\d+.\\d+\\%\\) covered/</code></td></tr><tr><td>pytest-cov (Python)</td><td><code>/(?i)total.*? (100(?:\\.0+)?\\%|[1-9]?\\d(?:\\.\\d+)?\\%)$/</code></td></tr><tr><td>Scoverage (Scala)</td><td><code>/Statement coverage[A-Za-z\\.*]\\s*:\\s*([^%]+)/</code></td></tr><tr><td>pest --coverage --colors=never (PHP)</td><td><code>/^\\s*Cov:\\s*\\d+\\.\\d+?%$/</code></td></tr><tr><td>phpunit --coverage-text --colors=never (PHP)</td><td><code>/^\\s*Lines:\\s*\\d+.\\d+\\%/</code></td></tr><tr><td>gcovr (C/C++)</td><td><code>/^TOTAL.*\\s+(\\d+\\%)$/</code></td></tr><tr><td>tap --coverage-report=text-summary (NodeJS)</td><td><code>/^Statements\\s*:\\s*([^%]+)/</code></td></tr><tr><td>nyc npm test (NodeJS)</td><td><code>/All files[^|]*\\|[^|]*\\s+([\\d\\.]+)/</code></td></tr><tr><td>jest --ci --coverage (NodeJS)</td><td><code>/All files[^|]*\\|[^|]*\\s+([\\d\\.]+)/</code></td></tr><tr><td>excoveralls (Elixir)</td><td><code>/\\[TOTAL\\]\\s+(\\d+\\.\\d+)%/</code></td></tr><tr><td>mix test --cover (Elixir)</td><td><code>/\\d+.\\d+\\%\\s+\\|\\s+Total/</code></td></tr><tr><td>JaCoCo (Java/Kotlin)</td><td><code>/Total.*?([0-9]{1,3})%/</code></td></tr><tr><td>go test -cover (Go)</td><td><code>/coverage: \\d+.\\d+% of statements/</code></td></tr><tr><td>.NET (OpenCover)</td><td><code>/(Visited Points).*\\((.*)\\)/</code></td></tr><tr><td>.NET (dotnet test line coverage)</td><td><code>/Total\\s*\\|\\s*(\\d+(?:\\.\\d+)?)/</code></td></tr><tr><td>tarpaulin (Rust)</td><td><code>/^\\d+.\\d+% coverage/</code></td></tr><tr><td>Pester (PowerShell)</td><td><code>/Covered (\\d+\\.\\d+%)/</code></td></tr></table>',2),n=[c];function a(s,l){return e(),d("div",null,n)}const v=t(r,[["render",a],["__file","test-coverage-example.html.vue"]]),m=JSON.parse(`{"path":"/cloud-native/test-coverage-example.html","title":"Test Coverage Example","lang":"zh-CN","frontmatter":{"description":"Test Coverage Example ","head":[["meta",{"property":"og:url","content":"https://guoxicheng.top/cloud-native/test-coverage-example.html"}],["meta",{"property":"og:site_name","content":"Guo's Page"}],["meta",{"property":"og:title","content":"Test Coverage Example"}],["meta",{"property":"og:description","content":"Test Coverage Example "}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-11-04T01:18:14.000Z"}],["meta",{"property":"article:modified_time","content":"2023-11-04T01:18:14.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Test Coverage Example\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-11-04T01:18:14.000Z\\",\\"author\\":[]}"]]},"headers":[],"git":{"createdTime":1697638485000,"updatedTime":1699060694000},"readingTime":{"minutes":1.06,"words":318},"filePathRelative":"cloud-native/test-coverage-example.md","localizedDate":"2023年10月18日","autoDesc":true,"excerpt":"\\n<table>\\n    <tbody><tr>\\n        <th>Coverage</th>\\n        <th>Example</th>\\n    </tr>\\n    <tr>\\n        <td>Simplecov (Ruby)</td>\\n        <td><code>/\\\\(\\\\d+.\\\\d+\\\\%\\\\) covered/</code></td>\\n    </tr>\\n    <tr>\\n        <td>pytest-cov (Python)</td>\\n        <td><code>/(?i)total.*? (100(?:\\\\.0+)?\\\\%|[1-9]?\\\\d(?:\\\\.\\\\d+)?\\\\%)$/</code></td>\\n    </tr>\\n    <tr>\\n        <td>Scoverage (Scala)</td>\\n        <td><code>/Statement coverage[A-Za-z\\\\.*]\\\\s*:\\\\s*([^%]+)/</code></td>\\n    </tr>\\n    <tr>\\n        <td>pest --coverage --colors=never (PHP)</td>\\n        <td><code>/^\\\\s*Cov:\\\\s*\\\\d+\\\\.\\\\d+?%$/</code></td>\\n    </tr>\\n    <tr>\\n        <td>phpunit --coverage-text --colors=never (PHP)</td>\\n        <td><code>/^\\\\s*Lines:\\\\s*\\\\d+.\\\\d+\\\\%/</code></td>\\n    </tr>\\n    <tr>\\n        <td>gcovr (C/C++)</td>\\n        <td><code>/^TOTAL.*\\\\s+(\\\\d+\\\\%)$/</code></td>\\n    </tr>\\n    <tr>\\n        <td>tap --coverage-report=text-summary (NodeJS)</td>\\n        <td><code>/^Statements\\\\s*:\\\\s*([^%]+)/</code></td>\\n    </tr>\\n    <tr>\\n        <td>nyc npm test (NodeJS)</td>\\n        <td><code>/All files[^|]*\\\\|[^|]*\\\\s+([\\\\d\\\\.]+)/</code></td>\\n    </tr>\\n    <tr>\\n        <td>jest --ci --coverage (NodeJS)</td>\\n        <td><code>/All files[^|]*\\\\|[^|]*\\\\s+([\\\\d\\\\.]+)/</code></td>\\n    </tr>\\n    <tr>\\n        <td>excoveralls (Elixir)</td>\\n        <td><code>/\\\\[TOTAL\\\\]\\\\s+(\\\\d+\\\\.\\\\d+)%/</code></td>\\n    </tr>\\n    <tr>\\n        <td>mix test --cover (Elixir)</td>\\n        <td><code>/\\\\d+.\\\\d+\\\\%\\\\s+\\\\|\\\\s+Total/</code></td>\\n    </tr>\\n    <tr>\\n        <td>JaCoCo (Java/Kotlin)</td>\\n        <td><code>/Total.*?([0-9]{1,3})%/</code></td>\\n    </tr>\\n    <tr>\\n        <td>go test -cover (Go)</td>\\n        <td><code>/coverage: \\\\d+.\\\\d+% of statements/</code></td>\\n    </tr>\\n    <tr>\\n        <td>.NET (OpenCover)</td>\\n        <td><code>/(Visited Points).*\\\\((.*)\\\\)/</code></td>\\n    </tr>\\n    <tr>\\n        <td>.NET (dotnet test line coverage)</td>\\n        <td><code>/Total\\\\s*\\\\|\\\\s*(\\\\d+(?:\\\\.\\\\d+)?)/</code></td>\\n    </tr>\\n    <tr>\\n        <td>tarpaulin (Rust)</td>\\n        <td><code>/^\\\\d+.\\\\d+% coverage/</code></td>\\n    </tr>\\n    <tr>\\n        <td>Pester (PowerShell)</td>\\n        <td><code>/Covered (\\\\d+\\\\.\\\\d+%)/</code></td>\\n    </tr>\\n</tbody></table>"}`);export{v as comp,m as data};
