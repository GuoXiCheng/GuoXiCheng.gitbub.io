const e=JSON.parse(`{"key":"v-556e7908","path":"/design-pattern/structural/proxy.html","title":"代理模式","lang":"zh-CN","frontmatter":{"description":"核心思想 代理模式允许控制对另一对象的访问。 典型用例 保护代理 控制对原始对象的访问，用于不同权限的访问控制。保护代理根据访问者的权限决定是否允许访问真实对象。 在这个例子中，保护代理根据用户角色来决定是否允许访问。这样的设计可以用来在不同层级的应用程序中实现权限控制，而不必修改真实对象的代码。 远程代理 代理模式可以为远程对象提供一个本地的代理，以...","head":[["meta",{"property":"og:url","content":"https://guoxicheng.top/design-pattern/structural/proxy.html"}],["meta",{"property":"og:site_name","content":"Guo's Page"}],["meta",{"property":"og:title","content":"代理模式"}],["meta",{"property":"og:description","content":"核心思想 代理模式允许控制对另一对象的访问。 典型用例 保护代理 控制对原始对象的访问，用于不同权限的访问控制。保护代理根据访问者的权限决定是否允许访问真实对象。 在这个例子中，保护代理根据用户角色来决定是否允许访问。这样的设计可以用来在不同层级的应用程序中实现权限控制，而不必修改真实对象的代码。 远程代理 代理模式可以为远程对象提供一个本地的代理，以..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-11-28T06:21:47.000Z"}],["meta",{"property":"article:modified_time","content":"2023-11-28T06:21:47.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"代理模式\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-11-28T06:21:47.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"核心思想","slug":"核心思想","link":"#核心思想","children":[]},{"level":2,"title":"典型用例","slug":"典型用例","link":"#典型用例","children":[{"level":3,"title":"保护代理","slug":"保护代理","link":"#保护代理","children":[]},{"level":3,"title":"远程代理","slug":"远程代理","link":"#远程代理","children":[]},{"level":3,"title":"虚拟代理","slug":"虚拟代理","link":"#虚拟代理","children":[]},{"level":3,"title":"智能引用代理","slug":"智能引用代理","link":"#智能引用代理","children":[]},{"level":3,"title":"缓存代理","slug":"缓存代理","link":"#缓存代理","children":[]},{"level":3,"title":"日志记录代理","slug":"日志记录代理","link":"#日志记录代理","children":[]},{"level":3,"title":"防火墙代理","slug":"防火墙代理","link":"#防火墙代理","children":[]}]}],"git":{"createdTime":1699079305000,"updatedTime":1701152507000},"readingTime":{"minutes":2.39,"words":718},"filePathRelative":"design-pattern/structural/proxy.md","localizedDate":"2023年11月4日","autoDesc":true}`);export{e as data};
