import{_ as a}from"./plugin-vue_export-helper-x3n3nnut.js";import{o as e,c as s,b as n}from"./app-6FoM1xCB.js";const r={},t=n(`<h1 id="部署-argocd" tabindex="-1"><a class="header-anchor" href="#部署-argocd" aria-hidden="true">#</a> 部署 Argocd</h1><h2 id="step-1-安装argocd" tabindex="-1"><a class="header-anchor" href="#step-1-安装argocd" aria-hidden="true">#</a> Step 1 安装argocd</h2><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>kubectl create namespace argocd
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>kubectl apply <span class="token parameter variable">-n</span> argocd <span class="token parameter variable">-f</span> https://raw.githubusercontent.com/argoproj/argo-cd/stable/manifests/core-install.yaml
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="step-2-创建访问入口" tabindex="-1"><a class="header-anchor" href="#step-2-创建访问入口" aria-hidden="true">#</a> Step 2 创建访问入口</h2><h3 id="方式一-由k8s分配端口" tabindex="-1"><a class="header-anchor" href="#方式一-由k8s分配端口" aria-hidden="true">#</a> 方式一：由K8S分配端口</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>kubectl patch svc argocd-server <span class="token parameter variable">-n</span> argocd <span class="token parameter variable">-p</span> <span class="token string">&#39;{&quot;spec&quot;: {&quot;type&quot;: &quot;NodePort&quot;}}&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>kubectl get svc argocd-server <span class="token parameter variable">-n</span> argocd
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="方式二-分配指定端口" tabindex="-1"><a class="header-anchor" href="#方式二-分配指定端口" aria-hidden="true">#</a> 方式二：分配指定端口</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sudo</span> k3s kubectl patch svc argocd-server <span class="token parameter variable">-n</span> argocd <span class="token parameter variable">-p</span> <span class="token string">&#39;{&quot;spec&quot;: {&quot;type&quot;: &quot;NodePort&quot;, &quot;ports&quot;: [{&quot;name&quot;: &quot;http&quot;, &quot;port&quot;: 80, &quot;targetPort&quot;: 8080, &quot;nodePort&quot;: 30001}]}}&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="step-3-查询admin登录密码" tabindex="-1"><a class="header-anchor" href="#step-3-查询admin登录密码" aria-hidden="true">#</a> Step 3 查询Admin登录密码</h2><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>kubectl <span class="token parameter variable">-n</span> argocd get secret argocd-initial-admin-secret <span class="token parameter variable">-o</span> <span class="token assign-left variable">jsonpath</span><span class="token operator">=</span><span class="token string">&quot;{.data.password}&quot;</span> <span class="token operator">|</span> base64 -d<span class="token punctuation">;</span> <span class="token builtin class-name">echo</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,12),d=[t];function o(i,c){return e(),s("div",null,d)}const u=a(r,[["render",o],["__file","argocd.html.vue"]]);export{u as default};
