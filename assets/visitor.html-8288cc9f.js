const e=JSON.parse(`{"key":"v-7a3fa2b0","path":"/design-pattern/behavioral/visitor.html","title":"访问者模式","lang":"zh-CN","frontmatter":{"description":"核心思想 访问者模式允许将算法与对象结构分离，以便在不修改已有代码的情况下向现有类层次中添加新的行为。 典型用例 保证兼容性和扩展性 为保证兼容性和扩展性，当需要对一组不同类型的对象执行操作，且这些对象经常添加新类型时，访问者模式允许在不修改现有类的情况下添加新操作。 在这个例子中，有两种类型的元素和两种类型的访问者。每个访问者都以不同的方式处理不同类...","head":[["meta",{"property":"og:url","content":"https://guoxicheng.top/design-pattern/behavioral/visitor.html"}],["meta",{"property":"og:site_name","content":"Guo's Page"}],["meta",{"property":"og:title","content":"访问者模式"}],["meta",{"property":"og:description","content":"核心思想 访问者模式允许将算法与对象结构分离，以便在不修改已有代码的情况下向现有类层次中添加新的行为。 典型用例 保证兼容性和扩展性 为保证兼容性和扩展性，当需要对一组不同类型的对象执行操作，且这些对象经常添加新类型时，访问者模式允许在不修改现有类的情况下添加新操作。 在这个例子中，有两种类型的元素和两种类型的访问者。每个访问者都以不同的方式处理不同类..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-11-27T02:15:28.000Z"}],["meta",{"property":"article:modified_time","content":"2023-11-27T02:15:28.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"访问者模式\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-11-27T02:15:28.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"核心思想","slug":"核心思想","link":"#核心思想","children":[]},{"level":2,"title":"典型用例","slug":"典型用例","link":"#典型用例","children":[{"level":3,"title":"保证兼容性和扩展性","slug":"保证兼容性和扩展性","link":"#保证兼容性和扩展性","children":[]},{"level":3,"title":"解析文档或对象结构","slug":"解析文档或对象结构","link":"#解析文档或对象结构","children":[]},{"level":3,"title":"报告和统计","slug":"报告和统计","link":"#报告和统计","children":[]},{"level":3,"title":"操作用户界面组件","slug":"操作用户界面组件","link":"#操作用户界面组件","children":[]},{"level":3,"title":"序列化和反序列化","slug":"序列化和反序列化","link":"#序列化和反序列化","children":[]}]}],"git":{"createdTime":1698977757000,"updatedTime":1701051328000},"readingTime":{"minutes":2.03,"words":610},"filePathRelative":"design-pattern/behavioral/visitor.md","localizedDate":"2023年11月3日","autoDesc":true}`);export{e as data};
