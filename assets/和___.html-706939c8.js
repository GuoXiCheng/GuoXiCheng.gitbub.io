import{_ as e}from"./plugin-vue_export-helper-c27b6911.js";import{o as t,c as p,b as _}from"./app-d0db85c0.js";const a={},n=_('<h1 id="和" tabindex="-1"><a class="header-anchor" href="#和" aria-hidden="true">#</a> ==和===</h1><p>相等操作符存在隐式类型转换，在比较前会先进行类型转换再进行比较</p><p>例如</p><p>比较字符串和布尔值，会转换为数值再比较</p><p>比较基本类型和引用类型，会调用引用类型的valueOf获取其原始值再进行比较</p><p>比较引用类型，会比较其引用指向的内存地址是否相同</p><p>比较null和undefined会返回true</p><p>如果比较存在NaN，则会返回false</p><p>全等操作符不存在类型转换，它是严格相等的，既要类型相同，也要值相同</p><p>全等操作符因为在使用时存在隐式类型转换，可能暗含一些漏洞，所以在比较null和undefined时适合使用相等，其余情况下适合使用全等</p>',10),r=[n];function c(o,s){return t(),p("div",null,r)}const i=e(a,[["render",c],["__file","和___.html.vue"]]);export{i as default};
