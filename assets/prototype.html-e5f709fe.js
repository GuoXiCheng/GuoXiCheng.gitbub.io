const e=JSON.parse(`{"key":"v-7cab1b72","path":"/design-pattern/creational/prototype.html","title":"原型模式","lang":"zh-CN","frontmatter":{"order":4,"description":"核心思想 原型模式允许通过复制已有实例来生成新实例，而无需依赖其所属的类。 典型用例 复制复杂对象 当创建一个对象的成本比较高时，例如：复杂的计算或数据库查询，可以通过复制一个已经创建的对象来提高效率。 在这个例子中，通过一个 clone 方法可以创建一个新实例，而无需再次经历昂贵的创建过程。这种方式在需要大量类似对象，且每个对象的创建成本都很高时非常有用。","head":[["meta",{"property":"og:url","content":"https://guoxicheng.top/design-pattern/creational/prototype.html"}],["meta",{"property":"og:site_name","content":"Guo's Page"}],["meta",{"property":"og:title","content":"原型模式"}],["meta",{"property":"og:description","content":"核心思想 原型模式允许通过复制已有实例来生成新实例，而无需依赖其所属的类。 典型用例 复制复杂对象 当创建一个对象的成本比较高时，例如：复杂的计算或数据库查询，可以通过复制一个已经创建的对象来提高效率。 在这个例子中，通过一个 clone 方法可以创建一个新实例，而无需再次经历昂贵的创建过程。这种方式在需要大量类似对象，且每个对象的创建成本都很高时非常有用。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-11-20T06:42:37.000Z"}],["meta",{"property":"article:modified_time","content":"2023-11-20T06:42:37.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"原型模式\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-11-20T06:42:37.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"核心思想","slug":"核心思想","link":"#核心思想","children":[]},{"level":2,"title":"典型用例","slug":"典型用例","link":"#典型用例","children":[{"level":3,"title":"复制复杂对象","slug":"复制复杂对象","link":"#复制复杂对象","children":[]}]}],"git":{"createdTime":1698909968000,"updatedTime":1700462557000},"readingTime":{"minutes":0.59,"words":176},"filePathRelative":"design-pattern/creational/prototype.md","localizedDate":"2023年11月2日","autoDesc":true}`);export{e as data};
