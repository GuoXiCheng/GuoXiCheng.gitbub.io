const e=JSON.parse(`{"key":"v-36cf2be9","path":"/design-pattern/behavioral/mediator.html","title":"中介者模式","lang":"zh-CN","frontmatter":{"description":"核心思想 中介者模式迫使对象通过中介者进行通信，而不是直接相互引用，从而使其松散耦合，而且可以独立地改变它们之间的交互。 典型用例 聊天室 在聊天应用中，中介者可以充当消息传递的中心，控制和协调不同用户之间的消息交流。 在这个例子中，聊天室类是中介者，它管理所有的用户。每个用户都知道如何与中介者通信，发送消息时会通过中介者来间接发送给其他用户。这样，用...","head":[["meta",{"property":"og:url","content":"https://guoxicheng.top/design-pattern/behavioral/mediator.html"}],["meta",{"property":"og:site_name","content":"Guo's Page"}],["meta",{"property":"og:title","content":"中介者模式"}],["meta",{"property":"og:description","content":"核心思想 中介者模式迫使对象通过中介者进行通信，而不是直接相互引用，从而使其松散耦合，而且可以独立地改变它们之间的交互。 典型用例 聊天室 在聊天应用中，中介者可以充当消息传递的中心，控制和协调不同用户之间的消息交流。 在这个例子中，聊天室类是中介者，它管理所有的用户。每个用户都知道如何与中介者通信，发送消息时会通过中介者来间接发送给其他用户。这样，用..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-11-20T06:42:37.000Z"}],["meta",{"property":"article:modified_time","content":"2023-11-20T06:42:37.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"中介者模式\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-11-20T06:42:37.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"核心思想","slug":"核心思想","link":"#核心思想","children":[]},{"level":2,"title":"典型用例","slug":"典型用例","link":"#典型用例","children":[{"level":3,"title":"聊天室","slug":"聊天室","link":"#聊天室","children":[]}]}],"git":{"createdTime":1699060694000,"updatedTime":1700462557000},"readingTime":{"minutes":0.68,"words":205},"filePathRelative":"design-pattern/behavioral/mediator.md","localizedDate":"2023年11月4日","autoDesc":true}`);export{e as data};
